<1.24.11.93.10.18.17.plp+@PHYLLIS.ADM.CS.CMU.EDU (<speaker>Phyllis Pomerantz</speaker>).0>
Type:     AI Seminar
<speaker>Who</speaker>:      <speaker>Kris Hammond</speaker> (University of Chicago)
Topic:    Actualized Intelligence: Planning and Acting in Dynamic Environments
<speaker>Dates</speaker>:    30-Nov-93
Time:     <stime>3:30 PM</stime>
Place:    5409 Wean Hall
Host:     <speaker>Manuela Veloso</speaker>
PostedBy: plp+ on 24-Nov-93 at 10:18 from PHYLLIS.ADM.CS.CMU.EDU (<speaker>Phyllis Pomerantz</speaker>)
Abstract: 

 Type:     AI Seminar
 <speaker>Who</speaker>:      <speaker>Kris Hammond</speaker> (University of Chicago)
 Topic:    Actualized Intelligence: Planning and Acting in Dynamic Environments
 <speaker>Dates</speaker>:    30-Nov-93
 Time:     <stime>3:30 p.m</stime>.
 Place:    5409 Wean Hall
 Host:     <speaker>Manuela Veloso</speaker>
 FurtherDetails: For appointments: <speaker>Phyllis Pomerantz</speaker> - x8-7897 or plp@cs

Actualized Intelligence: Planning and Acting in Dynamic Environments

			<speaker>Kris Hammond</speaker>
		    University of Chicago

Over the past few years, the thrust of research in planning has moved
away from the notion of a plan as a proof and more towards an approach
that integrates planning and execution.  <paragraph><sentence><speaker>Rather</speaker> than building systems that
produce plans, researchers are more concerned with systems that
produce behavior in the face of a changing world.</sentence>  <sentence>This change in
focus opens up a wide variety of new problems that ``planners'' have
to deal with.</sentence></paragraph>

<paragraph><sentence>In this talk, I <speaker>will discuss</speaker> one view of these issues and outline an
approach for dealing with them that combines what has been labeled
``case-based planning'' with a reactive componant and a learning
mechanism that uses run-time expectation failures to focus the
planner's attention on gaps in its knowledge base.</sentence>  <sentence>In terms of
planning, the system is able to recover from many execution-time
failures as well as capitalize on unforseen opportunities.</sentence>  <sentence>In terms
of learning, it is able to learn from both run-time opportunities and
unexpected execution problems.</sentence></paragraph>

FurtherDetails: For appointments: <speaker>Phyllis Pomerantz</speaker> - x8-7897 or plp@cs    
